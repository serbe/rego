import React from "react";
import clsx from "clsx";

interface ControlProps {
  children?: React.ReactNode;
  className?: string;
  // onClick: React.MouseEvent<HTMLElement>,
  isP?: boolean;
  // color: PropTypes.oneOf('white', 'light', 'dark', 'text', 'primary', 'link', 'info', 'success', 'warning', 'danger'),
  size: "small" | "medium" | "large";
  leftIcon?: string;
  rightIcon?: string;
  // outlined?: boolean,
  // inverted?: boolean,
  // rounded?: boolean,
  // hovered?: boolean,
  // focused?: boolean,
  // active?: boolean,
  loading?: boolean;
  // isStatic?: boolean,
  // disabled?: boolean
}

export const Control: React.FC<ControlProps> = (props: ControlProps) => {
  const {
    children,
    className,
    // href,
    // onClick,
    isP,
    // color,
    size,
    // leftIcon,
    // rightIcon,
    // rounded,
    // hovered,
    // focused,
    // active,
    loading
    // isStatic,
    // disabled,
  } = props;

  const Tag = isP ? "p" : "div";

  return (
    <Tag
      // disabled={disabled}
      // onClick={disabled ? undefined : onClick}
      className={clsx([
        { className },
        "control",
        {
          // [`is-${color}`]: color,
          [`is-${size}`]: size,
          // 'is-outlined': outlined,
          // 'is-inverted': inverted,
          // 'is-rounded': rounded,
          // 'is-hovered': hovered,
          // 'is-focused': focused,
          // 'is-active': active,
          "is-loading": loading
          // 'is-static': isStatic
        }
      ])}
    >
      {children}
    </Tag>
  );
};
